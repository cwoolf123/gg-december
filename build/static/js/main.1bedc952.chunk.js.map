{"version":3,"sources":["components/BooksList.js","components/SearchBar.js","actions/actions.js","components/SearchPage.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","marginTop","left","transform","padding","list_item","border","BooksList","list","classes","pages","List","className","map","item","ListItem","ListItemAvatar","Avatar","ListItemText","primary","book_title","secondary","Fragment","Typography","component","variant","inline","color","book_author","Divider","book_publication_city","book_publication_country","book_publication_year","book_pages","id","require","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","selector","down","pagination","connect","state","type","text","page","itemsPerPage","dispatch","onSearchPressed","onSearchUpdate","updateSearch","useState","data","setData","count","setCount","isLoading","setIsLoading","term","setTerm","setPage","setItemsPerPage","useSelector","handlePageChange","event","value","a","textSearchRequest","Number","pageResult","results","handlePageItemsChange","target","useDispatch","searchText","items","fetch","method","body","JSON","stringify","filters","values","headers","then","response","json","books","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","InputBase","placeholder","input","inputProps","onChange","e","Button","onClick","size","Pagination","Math","ceil","siblingCount","boundaryCount","SearchPage","Component","App","store","createStore","action","composeWithDevTools","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bedc952.chunk.js","sourcesContent":["import React from 'react'\n\n//Material-UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport BookIcon from '@material-ui/icons/BookOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst BooksList = ({ list }, { pages }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n    <List className={classes.root}>\n      {(list || []).map((item) => \n      <ListItem className={classes.list_item} key={item.id}>\n        <ListItemAvatar>\n          <Avatar>\n            <BookIcon />\n          </Avatar>\n        </ListItemAvatar>\n          <ListItemText primary={item.book_title} secondary={\n          <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n              Author(s): {item.book_author}\n              </Typography>\n              <Divider></Divider>\n              <Typography  variant=\"body2\">Location: {item.book_publication_city}, {item.book_publication_country} </Typography>\n              <Typography  variant=\"body2\">Year: {item.book_publication_year}</Typography>\n              <Typography  variant=\"body2\">Pages: {item.book_pages}</Typography>\n            </React.Fragment>} />\n      </ListItem>\n    )}\n    </List>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 10,\n    left: '50%',\n    transform: 'translate(-50% , 0%)',\n    padding: 5\n  },\n  list_item: {\n    width: '100%',\n    maxWidth: '50%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 10,\n    left: '50%',\n    transform: 'translate(-50% , 0%)',\n    border: '1px solid #eaeaea',\n    padding: 5\n  },\n}));\n\nexport default BooksList;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { search, updateSearch } from \"../actions/actions\";\n\n//Components\nimport BooksList from './BooksList';\n\n//Material-UI\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Pagination from '@material-ui/lab/Pagination';\n\n//Set API URL\nconst fetchURL = 'http://nyx.vima.ekt.gr:3000'\n\n//Set Local JSON Data\nconst fData = require('../api/data.json')\n\n//Search Tool Bar of Application Header Component\nfunction SearchBar({ search, onSearchPressed, onSearchUpdate }) {\n\n    //Search Results Data\n    const [data, setData] = useState(null);\n    const [count, setCount] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [term, setTerm] = useState(\"\");\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [page, setPage] = useState(1);\n    const [itemsPerPage, setItemsPerPage] = useState(5);\n    const itemsPerPageArray = [ 5, 10, 20, 40, 50, 100 ];\n\n    const classes = useStyles();\n\n\n    var text = useSelector(state => state.text);\n\n    const handlePageChange = async (event, value) => {\n      setPage(value);\n      const pageResult = await textSearchRequest(term, Number(value), Number(itemsPerPage));\n        dispatch({\n          type: 'PAGE_CHANGE',\n          search: term,\n          results: pageResult,\n        });\n    };\n\n    //Hom many items per page\n    const handlePageItemsChange = async (event) => {\n      setItemsPerPage(event.target.value);\n      const pageResult = await textSearchRequest(term, Number(page), Number(event.target.value));\n      setPage(1);\n    };\n\n    const dispatch = useDispatch();\n\n    const updateSearch = (e) => {\n      onSearchUpdate('UPDATE_SEARCH', e.target.value, page, itemsPerPage)\n    };\n\n    const searchText = async () => {\n      const searchResult = await textSearchRequest(text, Number(page), Number(itemsPerPage));\n      onSearchPressed('SEARCH_BOOKS', text, page, itemsPerPage);\n    };\n    \n    const getData = (page) => {\n        setCount(0)\n    }\n\n    // {\"books\":[],\"count\":0}\n\n    async function textSearchRequest(text, page, items) {\n      setIsLoading(true);\n      const response = await fetch('http://nyx.vima.ekt.gr:3000/api/books', {\n        method: 'POST',\n        body: JSON.stringify({\n          page: page,\n          itemsPerPage: items,\n          filters: [{ type: \"all\", values: [text] }],\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      })\n      .then((response) => response.json())\n      .then((json) => {\n        // console.log(json.books[0])\n        if (json !== null) { \n          setData(json.books) \n          setCount(json.count)\n          setTerm(text) \n          text = null\n          setIsLoading(false);\n        } else {\n          setIsLoading(true);\n          //sorry no results\n        }\n      })\n    }\n  \n    \n  return (\n    <div className={classes.root}>\n\n      {/* MENU SEARCH BAR HEADER */}\n      <AppBar position=\"static\">\n        <Toolbar>\n\n          {/* PSEUDO MENU BUTTON ICON */}\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\" >\n            <MenuIcon />\n          </IconButton>\n          \n            {/* SEARCH BANNER TITLE */}\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n             Books API Search\n            </Typography>\n\n              {/* SEARCH BAR */}\n              <div className={classes.search}>\n\n                  {/* SEARCH ICON */}\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n\n                    {/* SEARCH INPUT */}\n                    <InputBase\n                      placeholder=\"Search…\"\n                      classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                      }}\n                      inputProps={{ 'aria-label': 'search' }}\n                      onChange={e => updateSearch(e)}\n                    />\n                  </div>\n\n                <div>\n\n            {/* SEARCH BUTTON */}\n            <Button variant=\"contained\" color=\"default\" onClick={searchText}>Search</Button>\n\n          </div>\n        </Toolbar>\n      </AppBar>\n      \n      {/* SEARCH RESULTS BODY */}\n      <div>\n\n      {/* LOADING... */}\n      {isLoading && count !== 0 &&\n        <div className=\"loader-container\">\n          <div className=\"loader\">\n          </div>\n            <p>Loading data...</p>\n        </div>\n      }\n      \n      {/* SELECT NUMBER OF SEARCH ITEMS */}\n      {!isLoading && count !== 0 &&\n      <div className={classes.selector}> \n        <p>Items per Page: &nbsp; </p>\n          <select className={!isLoading?  \"active\" : \"inactive\"} onChange={handlePageItemsChange} value={itemsPerPage}>\n            {itemsPerPageArray.map((size) => (\n              <option key={size} value={size}>\n                {size}\n              </option>\n            ))}\n          </select>\n        </div>}\n\n      {/* SEARCH RESULTS */}\n      {!isLoading &&\n        <BooksList list={data} />}\n      \n      {/* PAGINATION */}\n      {!isLoading && count !== 0 &&\n        <Pagination\n        className={classes.pagination}\n        count={ Math.ceil(Number(count / itemsPerPage)) }\n        page={page}\n        siblingCount={1}\n        boundaryCount={1}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        color=\"primary\"\n        onChange={handlePageChange}\n      />}\n\n      </div>\n    </div>\n  );\n}\n\n// CSS - * styles are derrived from Matrial-UI Theme *\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 0,\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    marginRight: 10,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n  selector: {\n      position: 'relative',\n      display: 'inline-flex',\n      height: '1rem',\n      width: 'auto',\n      padding: 1,\n      alignItems: 'baseline',\n      marginLeft: '50%',\n      [theme.breakpoints.down('sm')]: {\n      width: '50vw',\n      padding: 10,\n      alignItems: 'baseline',\n      marginLeft: '25vw',\n      marginTop: 20,\n    },\n  },\n  pagination: {\n      width: '50%',\n      maxWidth: '50%',\n      backgroundColor: theme.palette.background.paper,\n      marginTop: 10,\n      marginLeft: '50%',\n      transform: 'translate(-50% , 0%)',\n      padding: 5\n  },\n}));\n\nconst mapStateToProps = state => ({\n  type: state.type,\n  text: state.text,\n  page: state.page,\n  itemsPerPage: state.itemsPerPage,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchPressed: ( type, text, page, itemsPerPage ) => dispatch(search(type, text, page, itemsPerPage)),\n  onSearchUpdate: ( type, text, page, itemsPerPage ) => dispatch(updateSearch(type, text, page, itemsPerPage)),\n});\n\nexport default connect( mapStateToProps, mapDispatchToProps )(SearchBar)","export const SEARCH_BOOKS = \"SEARCH_BOOKS\";\nexport const UPDATE_SEARCH = \"UPDATE_SEARCH\";\n\n\n\nexport const search = ( type, text, page, itemsPerPage ) => ({\n    type: type,\n    text: text, \n    page: page,\n    itemsPerPage: itemsPerPage, \n});\n\nexport const updateSearch = ( type, text, page, itemsPerPage ) => ({\n    type: type,\n    text: text, \n    page: page,\n    itemsPerPage: itemsPerPage, \n});\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\n\nclass  SearchPage extends Component {\n\n  render(){\n    return (\n      <section>\n        <SearchBar />\n      </section>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport SearchPage from './components/SearchPage';\n\nimport './App.css';\n\nfunction App() {\n  return ( \n      <div className='app'>\n        <SearchPage />\n      </div>);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools';\n\n// import reportWebVitals from './reportWebVitals';\n\nconst INITIAL_STATE = {\n  isLoading: true,\n  type:\"\",\n  text: \"\",\n  page: null,\n  itemsPerPage: null,\n};\n\n// const searchBooks = (text, page, itemsPerPage) => {\n//   return {\n//     type: \"SEARCH_BOOKS\",\n//     isLoading: true,\n//     text: text,\n//     page: page,\n//     itemsPerPage: itemsPerPage,\n//   }\n// }\n\nconst rootReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'SEARCH_BOOKS':\n      return {\n        ...state,\n        isLoading: action.isLoading,\n        text: action.text,\n        page: action.page,\n        itemsPerPage: action.itemsPerPage,\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n  INITIAL_STATE,\n  composeWithDevTools,\n);\n\nstore.subscribe(() => console.log(store.getState()));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// Start measuring performance in the app,\n// log results\n// reportWebVitals(console.log);"],"sourceRoot":""}